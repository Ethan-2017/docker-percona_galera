## Example MaxScale.cnf configuration file
#
# Global parameters
#
# Number of worker threads in MaxScale
#
#   threads=<number of threads>

[maxscale]
threads=1

{{ $servers := ls "/database/cluster/mysqlNodes" }}

[MySQL Monitor]
type=monitor
module=mysqlmon
servers={{join $servers ","}}
user={{ getv "/database/credentials/adminUser" }}
passwd={{ getv "/database/credentials/adminPass" }}
monitor_interval=10000
#backend_connect_timeout=
#backend_read_timeout=
#backend_write_timeout=
#detect_replication_lag=
#detect_stale_master=

[Galera Monitor]
type=monitor
module=galeramon
servers={{join $servers ","}}
user={{ getv "/database/credentials/adminUser" }}
passwd={{ getv "/database/credentials/adminPass" }}
monitor_interval=10000
#disable_master_failback=

[Read Connection Router]
type=service
router=readconnroute
servers={{join $servers ","}}
user={{ getv "/database/credentials/adminUser" }}
passwd={{ getv "/database/credentials/adminPass" }}
router_options=slave

[RW Split Router]
type=service
router=readwritesplit
servers={{join $servers ","}}
user={{ getv "/database/credentials/adminUser" }}
passwd={{ getv "/database/credentials/adminPass" }}
max_slave_connections=100%
#use_sql_variables_in=master
#max_slave_replication_lag=21
#filters=hint|fetch|qla
#router_options=slave_selection_criteria=LEAST_CURRENT_OPERATIONS

# Uncomment this to disable the saving of session modifying comments. Some scripting
# languages use connection pooling and will use the same session. MaxScale sees them
# as the same session and stores them for the slave recovery process.
router_options=disable_sescmd_history=true,disable_slave_recovery=true

# This will allow the master server to be used for read queries. By default
# MaxScale will only use the master for write queries.
router_options=master_accept_reads=true

[Debug Interface]
type=service
router=debugcli

[CLI]
type=service
router=cli

[Read Connection Listener]
type=listener
service=Read Connection Router
protocol=MySQLClient
port=4008

[RW Split Listener]
type=listener
service=RW Split Router
protocol=MySQLClient
port=4006

[Debug Listener]
type=listener
service=Debug Interface
protocol=telnetd
address=127.0.0.1
port=4442

[CLI Listener]
type=listener
service=CLI
protocol=maxscaled
address=127.0.0.1
port=6603

{{range gets "/database/cluster/mysqlNodes/*"}}{{ $arr := split .Value ":" }}
[{{ base .Key }}]
type=server
address={{ index $arr 0 }}
port={{ index $arr 1 }}
protocol=MySQLBackend
{{end}}
